{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om javheri\\\\Desktop\\\\kretin\\\\frontend\\\\src\\\\components\\\\Alzheimer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Text_area from './Text_area';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Alzheimer() {\n  _s();\n  const [todoTasks, setTodoTasks] = useState([]);\n  const handleAddTask = task => {\n    // Add the new task to the state\n    setTodoTasks([...todoTasks, task]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Text_area, {\n      heading: \"Today\",\n      text1: \"Add\",\n      text2: \"Edit\",\n      text3: \"Delete\",\n      text4: \"Done\",\n      status: \"today\",\n      results: todoTasks.join('\\n'),\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Text_area, {\n      heading: \"Next\",\n      text1: \"Add\",\n      text3: \"Delete\",\n      text4: \"Today\",\n      status: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Text_area, {\n      heading: \"My Diary\",\n      text1: \"Add\",\n      text2: \"Edit\",\n      text3: \"Delete\",\n      status: \"diary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Alzheimer, \"zdink29H/O0KeGysNd8I9X6XdSo=\");\n_c = Alzheimer;\nvar _c;\n$RefreshReg$(_c, \"Alzheimer\");","map":{"version":3,"names":["React","useEffect","useState","Text_area","jsxDEV","_jsxDEV","Alzheimer","_s","todoTasks","setTodoTasks","handleAddTask","task","children","heading","text1","text2","text3","text4","status","results","join","onAddTask","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/om javheri/Desktop/kretin/frontend/src/components/Alzheimer.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport Text_area from './Text_area'\r\n\r\nexport default function Alzheimer() {\r\n  const [todoTasks, setTodoTasks] = useState([]);\r\n\r\n\r\n  \r\n\r\n  const handleAddTask = (task) => {\r\n    // Add the new task to the state\r\n    setTodoTasks([...todoTasks, task]);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n<Text_area heading=\"Today\" text1=\"Add\" text2=\"Edit\" text3=\"Delete\" text4=\"Done\" status=\"today\" results={todoTasks.join('\\n')} onAddTask={handleAddTask}/>\r\n\r\n<Text_area heading=\"Next\" text1=\"Add\"  text3=\"Delete\" text4=\"Today\" status=\"next\"/>\r\n<Text_area heading=\"My Diary\" text1=\"Add\" text2=\"Edit\" text3=\"Delete\" status=\"diary\"/>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAK9C,MAAMQ,aAAa,GAAIC,IAAI,IAAK;IAC9B;IACAF,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEG,IAAI,CAAC,CAAC;EACpC,CAAC;EAGD,oBACEN,OAAA;IAAAO,QAAA,gBACJP,OAAA,CAACF,SAAS;MAACU,OAAO,EAAC,OAAO;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,OAAO;MAACC,OAAO,EAAEX,SAAS,CAACY,IAAI,CAAC,IAAI,CAAE;MAACC,SAAS,EAAEX;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEzJpB,OAAA,CAACF,SAAS;MAACU,OAAO,EAAC,MAAM;MAACC,KAAK,EAAC,KAAK;MAAEE,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAC,OAAO;MAACC,MAAM,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnFpB,OAAA,CAACF,SAAS;MAACU,OAAO,EAAC,UAAU;MAACC,KAAK,EAAC,KAAK;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,QAAQ;MAACE,MAAM,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAK7E,CAAC;AAEV;AAAClB,EAAA,CAxBuBD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}