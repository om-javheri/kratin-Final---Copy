{"ast":null,"code":"import * as tf from '@tensorflow/tfjs';\nimport '@tensorflow/tfjs-backend-webgl'; // If you want to use WebGL for inference\n\n// Load the model from the file\nasync function loadModel() {\n  const model = await tf.loadLayersModel('./model.json');\n  return model;\n}\nexport default async function generateData(newDataPoint) {\n  // Load the model\n  const model = await loadModel();\n\n  // Assuming threshold is defined somewhere in your code\n  const threshold = 0.5;\n\n  // Make prediction\n  const new_data_point_pred = model.predict(newDataPoint);\n  const new_data_point_pred_binary = new_data_point_pred.greaterEqual(threshold).cast('int32');\n  if (new_data_point_pred_binary.dataSync()[0] === 1) {\n    console.log(\"You are prone to diabetes.\");\n  } else {\n    console.log(\"You are not prone to diabetes.\");\n  }\n}","map":{"version":3,"names":["tf","loadModel","model","loadLayersModel","generateData","newDataPoint","threshold","new_data_point_pred","predict","new_data_point_pred_binary","greaterEqual","cast","dataSync","console","log"],"sources":["C:/Users/om javheri/Desktop/kretin Semi final - Copy/frontend/src/components/tensorflow.js"],"sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\nimport '@tensorflow/tfjs-backend-webgl'; // If you want to use WebGL for inference\r\n\r\n// Load the model from the file\r\nasync function loadModel() {\r\n    const model = await tf.loadLayersModel('./model.json');\r\n    return model;\r\n}\r\n\r\nexport default async function generateData(newDataPoint) {\r\n    // Load the model\r\n    const model = await loadModel();\r\n\r\n    // Assuming threshold is defined somewhere in your code\r\n    const threshold = 0.5;\r\n\r\n    // Make prediction\r\n    const new_data_point_pred = model.predict(newDataPoint);\r\n    const new_data_point_pred_binary = new_data_point_pred.greaterEqual(threshold).cast('int32');\r\n    \r\n    if (new_data_point_pred_binary.dataSync()[0] === 1) {\r\n        console.log(\"You are prone to diabetes.\");\r\n    } else {\r\n        console.log(\"You are not prone to diabetes.\");\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,kBAAkB;AACtC,OAAO,gCAAgC,CAAC,CAAC;;AAEzC;AACA,eAAeC,SAASA,CAAA,EAAG;EACvB,MAAMC,KAAK,GAAG,MAAMF,EAAE,CAACG,eAAe,CAAC,cAAc,CAAC;EACtD,OAAOD,KAAK;AAChB;AAEA,eAAe,eAAeE,YAAYA,CAACC,YAAY,EAAE;EACrD;EACA,MAAMH,KAAK,GAAG,MAAMD,SAAS,CAAC,CAAC;;EAE/B;EACA,MAAMK,SAAS,GAAG,GAAG;;EAErB;EACA,MAAMC,mBAAmB,GAAGL,KAAK,CAACM,OAAO,CAACH,YAAY,CAAC;EACvD,MAAMI,0BAA0B,GAAGF,mBAAmB,CAACG,YAAY,CAACJ,SAAS,CAAC,CAACK,IAAI,CAAC,OAAO,CAAC;EAE5F,IAAIF,0BAA0B,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IAChDC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC7C,CAAC,MAAM;IACHD,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EACjD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}