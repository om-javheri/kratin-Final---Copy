{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om javheri\\\\Desktop\\\\kretin\\\\frontend\\\\src\\\\components\\\\ShowAndId.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ShowAndId() {\n  // const [studentData, setStudentData] = useState([]);\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [itemsPerPage] = useState(3);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:8081/ShowAndId');\n  //       const data = await response.json();\n  //       if (Array.isArray(data)) {\n  //         setStudentData(data);\n  //       } else {\n  //         setStudentData([]);\n  //       }\n  //     } catch (error) {\n  //       console.error('Error:', error);\n  //       setStudentData([]);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  // const indexOfLastItem = currentPage * itemsPerPage;\n  // const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  // const currentItems = studentData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // const navigate = useNavigate();\n  // const [values] = useState({\n  //   id: '', // Assuming you want to edit a student by ID\n  //   // Add other fields if needed\n  // });\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n\n  //   fetch(`http://localhost:8081/Edit2/${values.id}`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({\n  //       // Add other fields if needed\n  //     }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       if (data.message) {\n  //         // setRegisterStatus(data.message);\n  //         navigate('/Edit2');\n  //       } else {\n  //         // setRegisterStatus(\"Concert created\");\n  //         console.log(data);\n  //         navigate('/Edit2');\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center center2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"colorw\",\n        children: \"Edit Patient's Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table2\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Student ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Student Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Student Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Student Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"tbody\",\n            children: currentItems.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: student.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: student.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(studentData.length / itemsPerPage)\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => paginate(i + 1),\n          className: `btn ${currentPage === i + 1 ? 'btn-success' : 'btn-warning'}`,\n          children: i + 1\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this), \"        \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSubmit,\n            className: \"btn btn-success\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ShowAndId;\nexport default ShowAndId;\nvar _c;\n$RefreshReg$(_c, \"ShowAndId\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowAndId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","currentItems","map","student","index","id","name","email","username","Array","from","length","Math","ceil","studentData","itemsPerPage","_","i","onClick","paginate","currentPage","type","handleSubmit","_c","$RefreshReg$"],"sources":["C:/Users/om javheri/Desktop/kretin/frontend/src/components/ShowAndId.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ShowAndId() {\r\n  // const [studentData, setStudentData] = useState([]);\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  // const [itemsPerPage] = useState(3);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await fetch('http://localhost:8081/ShowAndId');\r\n  //       const data = await response.json();\r\n  //       if (Array.isArray(data)) {\r\n  //         setStudentData(data);\r\n  //       } else {\r\n  //         setStudentData([]);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error('Error:', error);\r\n  //       setStudentData([]);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  // const indexOfLastItem = currentPage * itemsPerPage;\r\n  // const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  // const currentItems = studentData.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // const navigate = useNavigate();\r\n  // const [values] = useState({\r\n  //   id: '', // Assuming you want to edit a student by ID\r\n  //   // Add other fields if needed\r\n  // });\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   fetch(`http://localhost:8081/Edit2/${values.id}`, {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       // Add other fields if needed\r\n  //     }),\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => {\r\n  //       if (data.message) {\r\n  //         // setRegisterStatus(data.message);\r\n  //         navigate('/Edit2');\r\n  //       } else {\r\n  //         // setRegisterStatus(\"Concert created\");\r\n  //         console.log(data);\r\n  //         navigate('/Edit2');\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error('Error:', error);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className='text-center center2'>\r\n        <h5 className='colorw'>Edit Patient's Data</h5>\r\n\r\n        <div>\r\n          <table className='table2'>\r\n            <thead>\r\n              <tr>\r\n                <th>Student ID</th>\r\n                <th>Student Name</th>\r\n                <th>Student Email</th>\r\n                <th>Student Username</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className='tbody'>\r\n              {currentItems.map((student, index) => (\r\n                <tr key={index}>\r\n                  <td>{student.id}</td>\r\n                  <td>{student.name}</td>\r\n                  <td>{student.email}</td>\r\n                  <td>{student.username}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className='pagination'>\r\n          {Array.from({ length: Math.ceil(studentData.length / itemsPerPage) }, (_, i) => (\r\n            <button\r\n              key={i + 1}\r\n              onClick={() => paginate(i + 1)}\r\n              className={`btn ${currentPage === i + 1 ? 'btn-success' : 'btn-warning'}`}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n<br/>        <div className='text-center'>\r\n          <div>\r\n            <button type='submit' onClick={handleSubmit} className='btn btn-success'>\r\n              Edit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowAndId;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}